openapi: 3.0.0

info:

  title: Jobs API

  contact: {}

  version: '1.0'

servers:

- url: http://127.0.0.1:3000/api/v1

  variables: {}

paths:

  /auth/login:

    post:

      tags:

      - Auth

      summary: Login

      operationId: Login

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              $ref: '#/components/schemas/LoginRequest'

            example:

              email: john3@gmail.com

              password: secret

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security: []

  /auth/register:

    post:

      tags:

      - Auth

      summary: Register

      operationId: Register

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              $ref: '#/components/schemas/RegisterRequest'

            example:

              name: john6

              email: john10@gmail.com

              password: secret

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security: []

  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: The job ID

    get:

      tags:

      - Jobs

      summary: Get Job

      operationId: GetJob

      parameters: []

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

    patch:

      tags:

      - Jobs

      summary: Update Job

      operationId: UpdateJob

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              $ref: '#/components/schemas/UpdateJobRequest'

            example:

              company: borland

              position: qa engineer

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

    delete:

      tags:

      - Jobs

      summary: Delete Jobs

      operationId: DeleteJobs

      parameters: []

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

  /jobs:

    post:

      tags:

      - Jobs

      summary: Create Job

      operationId: CreateJob

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              $ref: '#/components/schemas/CreateJobRequest'

            example:

              company: microsoft

              position: product manager

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

    get:

      tags:

      - Jobs

      summary: Get Jobs

      operationId: GetJobs

      parameters: []

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

components:

  schemas:

    LoginRequest:

      title: LoginRequest

      required:

      - email

      - password

      type: object

      properties:

        email:

          type: string

        password:

          type: string

      example:

        email: john3@gmail.com

        password: secret

    RegisterRequest:

      title: RegisterRequest

      required:

      - name

      - email

      - password

      type: object

      properties:

        name:

          type: string

        email:

          type: string

        password:

          type: string

      example:

        name: john6

        email: john10@gmail.com

        password: secret

    UpdateJobRequest:

      title: UpdateJobRequest

      required:

      - company

      - position

      type: object

      properties:

        company:

          type: string

        position:

          type: string

      example:

        company: borland

        position: qa engineer

    CreateJobRequest:

      title: CreateJobRequest

      required:

      - company

      - position

      type: object

      properties:

        company:

          type: string

        position:

          type: string

      example:

        company: microsoft

        position: product manager

  securitySchemes:

    bearer:

      type: http

      scheme: bearer

security: []

tags:

- name: Auth

  description: ''

- name: Jobs

  description: ''

